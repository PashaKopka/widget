import time
import sys
import importlib.util

from PyQt5 import QtWidgets
from PyQt5.QtGui import QFont
from PyQt5.QtWidgets import QFileDialog, QPushButton

from widget.ui.main_design import Ui_MainWindow
from widget.clockwidget import ClockWidget
from widget.widged import BaseWidget


class NewWidget(BaseWidget):

    def __init__(self, design_ui):
        super().__init__()

        self.ui = design_ui()
        self.ui.setupUi(self)
        self.ui.label.mouseMoveEvent = self.move_window


class MainWindow(QtWidgets.QMainWindow):

    def __init__(self):
        super().__init__()
        self.click_time = time.time()

        self.ui = Ui_MainWindow()
        self.ui.setupUi(self)
        self.setWindowTitle('Widget Manager')

        self.ui.add_widget_button.clicked.connect(self.add_widget)

        self.clock_widget = ClockWidget()
        self.ui.clock_widget_button.clicked.connect(lambda: self.check(self.clock_widget))

    def check(self, widget):
        if (time.time() - self.click_time) < .5:
            self.display_widget(widget)
        else:
            self.click_time = time.time()

    def add_widget(self):
        """
        This function adding checkbox to ScrollBar and
        create function for activating this checkbox
        :return: None
        """
        filename, path = self.get_file_name()
        widget = self.create_widget(filename, path)

        button = QPushButton(filename)
        button.clicked.connect(lambda: self.check(widget))
        button.setFont(QFont('MS Shell Dlg 2', 14))

        self.ui.widgets_layout.addWidget(button)

    @staticmethod
    def create_widget(filename, path):
        """
        This function import widget py-file, generated by command:
            $ pyuic5 design.ui -o design.py
        and create specimen of this widget class
        :param filename: name of file for naming module
        :param path: path to file
        :return: widget class with design UI_Form
        """
        module_importer = importlib.util.spec_from_file_location(filename, path)
        module = importlib.util.module_from_spec(module_importer)
        module_importer.loader.exec_module(module)

        return NewWidget(module.Ui_Form)

    @staticmethod
    def display_widget(widget: BaseWidget):
        """
        display the widget on users screen
        :param widget: widget, that will be displayed
        :return: None
        """
        if not widget.isVisible():
            widget.show()
        else:
            widget.hide()

    @staticmethod
    def get_file_name():
        """
        This function return data of the file
        :return: filename and path to file
        """
        path = QFileDialog.getOpenFileName()
        filename = path[0].split('/')
        filename = filename[-1].split('.')
        filename = filename[0]
        return filename, path[0]


app = QtWidgets.QApplication([])

application = MainWindow()
application.show()

sys.exit(app.exec())
